name: Build and deploy all of ReportVision's services to a development environment

on:
  workflow_dispatch:
    inputs:
      deploy-env:
        description: 'The environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - demo
      ocr-docker-tag:
        description: 'This is optional if you would like to deploy an already published OCR-API image'
        required: false

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build-publish-ocr:
    name: Build and Publish OCR
    runs-on: ubuntu-latest
    outputs:
      docker_inspect: ${{ steps.image_check.outputs.docker_inspect }}
    steps:
      - uses: actions/checkout@v4
      - name: Lowercase the repo name
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      - name: Set OCR Docker tag
        shell: bash
        id: set-environment
        env:
          DEPLOY_ENV: ${{ inputs.deploy-env }}
        run: |-
          USER_INPUT=""
          echo "docker_tag=$(
            echo ${USER_INPUT:-"${{ github.sha }}"}
          )" >> $GITHUB_ENV
      - name: Check if image exists
        id: image_check
        run: |
          echo "docker_inspect=$(
              docker manifest inspect ghcr.io/${{ env.REPO }}-ocr-api:${{ env.docker_tag }} > /dev/null ; echo $?
            )" >> $GITHUB_OUTPUT
      - name: Build and Push backend
        if: ${{ steps.image_check.outputs.docker_inspect == 1 }}
        uses: ./.github/actions/build-publish-api
        with:
          docker-registry: ghcr.io
          docker-pw: ${{ secrets.GITHUB_TOKEN }}
          docker-username: ${{ github.actor }}
          docker-tag: ${{ env.docker_tag }}
          dockerfile-path: ./OCR/Dockerfile
          docker-context-path: ./OCR/
          api-name: ocr-api

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-frontend
        name: Build frontend
        with:
          api-endpoint: https://reportvision-ocr-${{ inputs.deploy-env }}.azurewebsites.net/
          frontend-tarball: ./frontend.tgz
          frontend-path: ./frontend
          frontend-build-path: ./frontend/dist/
          node-version: 20

  environment-setup:
    name: Setup Azure Environment
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy-env }}
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: ./.github/actions/tf-setup
        name: Setup this environment with Terraform
        with:
          deploy-env: ${{ inputs.deploy-env }}
          azure-resource-group: reportvision-rg-${{ inputs.deploy-env }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          app-name: reportvision

  deploy-ocr:
    name: Deploy OCR
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy-env }}
    needs: [build-publish-ocr, environment-setup]
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy OCR-API
        uses: ./.github/actions/deploy-api
        with:
          deploy-env: ${{ inputs.deploy-env }}
          docker-tag: ${{ env.docker_tag }}
          docker-registry: ghcr.io
          api-name: ocr-api

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy-env }}
    needs: [build-frontend, environment-setup]
    if: ${{ inputs.deploy-env != 'demo'}}
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy frontend
        uses: ./.github/actions/deploy-frontend
        with:
          frontend-tarball: frontend.tgz
          deploy-env: ${{ inputs.deploy-env }}