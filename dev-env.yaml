services:
  ocr:
    build: 
      context: ./OCR
      dockerfile: dev-dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./OCR:/ocr
    restart: "no"
    command: "/bin/sh -c 'poetry install && poetry run fastapi dev ocr/api.py --host 0.0.0.0 --port 8000'" 
  frontend:
    build:
      context: ./frontend
      dockerfile: dev-dockerfile
    ports:
      - "5173:5173"
      - "8080:8080"
    volumes:
      - ./frontend:/app
    depends_on:
      - api
      - ocr
    restart: "no"
    command: "/bin/sh -c 'npm install && npx playwright install && npx playwright test --ui-port=8080 --ui-host=0.0.0.0 & npm run dev -- --host'"
  db:
    image: postgres:alpine
    restart: "unless-stopped"
    shm_size: 128mb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: reportvision
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: super_secret_password
  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
    ports: 
      - "8081:8081"
    volumes:
      - ./backend:/app
    restart: "unless-stopped"
    depends_on: 
      - db
    command: "./gradlew bootRun --continuous --args='--server.port=8081'"

